<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.c2c.dao.GoodsMapper" >
  <resultMap id="BaseResultMap" type="com.c2c.pojo.Goods" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="catelog_id" property="catelogId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="real_price" property="realPrice" jdbcType="REAL" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="commet_num" property="commetNum" jdbcType="INTEGER" />
    <result column="polish_time" property="polishTime" jdbcType="VARCHAR" />
    <result column="good_status" property="good_status" jdbcType="INTEGER" />
    
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.c2c.pojo.Goods" extends="BaseResultMap" >
    <result column="describle" property="describle" jdbcType="LONGVARCHAR" />
  </resultMap>
  <!--     返回的集合   column是数据字段 property 是实体字段 -->
  <resultMap id="AllGoddsListMap" type="com.c2c.pojo.Goods" >
  <id column="id" property="id" jdbcType="INTEGER" />
  <result column="catelog_id" property="catelogId" jdbcType="INTEGER" />
  <result column="gname" property="name" jdbcType="VARCHAR" />
  <result column="price" property="price" jdbcType="REAL" />
  <result column="real_price" property="realPrice" jdbcType="REAL" />
  <result column="start_time" property="startTime" jdbcType="VARCHAR" />
  <result column="end_time" property="endTime" jdbcType="VARCHAR" />
  <result column="polish_time" property="polishTime" jdbcType="VARCHAR" />
  <result column="describle" property="describle" jdbcType="LONGVARCHAR" />
  	 <collection property="catelog" javaType="java.util.List" ofType="com.c2c.pojo.Catelog">  
            <id column="id" property="id" jdbcType="INTEGER" />  
            <result column="cname" property="name" jdbcType="VARCHAR" />   
        </collection> 
     <collection property="image" javaType="java.util.List" ofType="com.c2c.pojo.Image">  
            <id column="id" property="id" jdbcType="INTEGER" />  
            <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
            <result column="img_url" property="imgUrl" jdbcType="VARCHAR" />   
        </collection>  
  </resultMap>
<!--   商品管理sql -->
  <select id="AllGoddsList" resultMap="AllGoddsListMap">  
		  SELECT
			g.id,
			c.id catelog_id,
			i.id img_id,
			i.img_url,
			c.`name` cname,
			g.`name` gname,
			g.describle,
			g.price,
			g.real_price,
			g.start_time,
			g.polish_time,
			g.end_time
		FROM
			goods g
		LEFT JOIN catelog c ON g.catelog_id = c.id
		LEFT JOIN image i ON g.id = i.goods_id
		where g.good_status=1
		and c.`name` like CONCAT('%',#{0},'%')
		limit #{1},#{2}
		
  </select>
  <select id="AllGoddsListCount" parameterType="String" resultType="java.lang.Integer" >
  		  SELECT
			count(*)
		FROM
			goods g
		LEFT JOIN catelog c ON g.catelog_id = c.id
		LEFT JOIN image i ON g.id = i.goods_id
		where g.good_status=1
		and c.`name` like CONCAT('%',#{0},'%') 
  </select>
  
  <!--   商品管理sql审核 -->
  <select id="AllGoddsListSh" resultMap="AllGoddsListMap">  
		  SELECT
			g.id,
			c.id catelog_id,
			i.id img_id,
			i.img_url,
			c.`name` cname,
			g.`name` gname,
			g.describle,
			g.price,
			g.real_price,
			g.start_time,
			g.polish_time,
			g.end_time
		FROM
			goods g
		LEFT JOIN catelog c ON g.catelog_id = c.id
		LEFT JOIN image i ON g.id = i.goods_id
		where g.good_status=0
		and c.`name` like CONCAT('%',#{0},'%')
		limit #{1},#{2}
		
  </select>
  <select id="AllGoddsListCountSh" parameterType="String" resultType="java.lang.Integer" >
  		  SELECT
			count(*)
		FROM
			goods g
		LEFT JOIN catelog c ON g.catelog_id = c.id
		LEFT JOIN image i ON g.id = i.goods_id 
		where g.good_status=0
		and c.`name` like CONCAT('%',#{0},'%') 
  </select>
  
  <sql id="Base_Column_List" >
    id, catelog_id, user_id, name, price, real_price, start_time, polish_time, end_time, commet_num,good_status
  </sql>
  <sql id="Blob_Column_List" >
    describle
  </sql>
  <sql id="Factor">
--     and end_time >= now() order by polish_time DESC
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select
    *
    from goods
    where id = #{id,jdbcType=INTEGER}
    <include refid="Factor"></include>
  </select>
  <select id="searchGoods" resultMap="ResultMapWithBLOBs" parameterType="String" >
    select
    *
    from goods
    where name like concat('%',#{name},'%') OR describle like concat('%',#{describle},'%')
    <include refid="Factor"></include>
  </select>
  
  
  <select id="selectByCatelog" resultMap="ResultMapWithBLOBs">
    select * from goods
  	  where 1=1  and good_status in (1,3)
    <if test="name != null" >
     AND (name like concat('%',#{name},'%')
    </if>
    <if test="catelog_id !='0'.toString()">
    and catelog_id = #{catelog_id,jdbcType=INTEGER}
    </if>
    <if test="describle != null" >
     	OR describle like concat('%',#{describle},'%'))
    </if>
<!-- <include refid="Factor"></include> -->
    order by id DESC
    limit 10
  </select>
  
  
  <select id="selectAllGoods" resultMap="ResultMapWithBLOBs">
    select * from goods
  </select>
  
  
  <select id="getGoodsByUserId" resultMap="ResultMapWithBLOBs">
    select * from goods where user_id = #{user_id,jdbcType=INTEGER}
  </select>

  <select id="selectByCatelogOrderByDate" resultMap="ResultMapWithBLOBs">
    select * from goods
    where catelog_id = #{catelogId,jdbcType=INTEGER}
    and good_status in (1,3)
    order by id DESC
    limit #{limit,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from goods
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.c2c.pojo.Goods" useGeneratedKeys="true" keyProperty="id">
    insert into goods (id, catelog_id, user_id,
    name, price, real_price, start_time,
    end_time, polish_time, commet_num, describle,good_status)
    values (#{id,jdbcType=INTEGER}, #{catelogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
    #{name,jdbcType=VARCHAR}, #{price,jdbcType=REAL}, #{realPrice,jdbcType=REAL}, #{startTime,jdbcType=VARCHAR},
    #{endTime,jdbcType=VARCHAR}, #{polishTime,jdbcType=VARCHAR}, #{commetNum,jdbcType=INTEGER}, #{describle,jdbcType=LONGVARCHAR},#{good_status,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.c2c.pojo.Goods" >
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="catelogId != null" >
        catelog_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="realPrice != null" >
        real_price,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="polishTime != null" >
        polish_time,
      </if>
      <if test="commetNum != null" >
        commet_num,
      </if>
      <if test="describle != null" >
        describle,
      </if>
      <if test="good_status != null" >
        good_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="catelogId != null" >
        #{catelogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="realPrice != null" >
        #{realPrice,jdbcType=REAL},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        #{polishTime,jdbcType=VARCHAR},
      </if>
      <if test="commetNum != null" >
        #{commetNum,jdbcType=INTEGER},
      </if>
      <if test="describle != null" >
        #{describle,jdbcType=LONGVARCHAR},
      </if>
       <if test="good_status != null" >
        #{good_status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.c2c.pojo.Goods" >
    update goods
    <set >
      <if test="catelogId != null" >
        catelog_id = #{catelogId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="realPrice != null" >
        real_price = #{realPrice,jdbcType=REAL},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="endTime != null" >
        polish_time = #{polishTime,jdbcType=VARCHAR},
      </if>
      <if test="commetNum != null" >
        commet_num = #{commetNum,jdbcType=INTEGER},
      </if>
      <if test="describle != null" >
        describle = #{describle,jdbcType=LONGVARCHAR},
      </if>
      <if test="good_status != null" >
        good_status = #{good_status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.c2c.pojo.Goods" >
    update goods
    set catelog_id = #{catelogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      real_price = #{realPrice,jdbcType=REAL},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      polish_time = #{polishTime,jdbcType=VARCHAR},
      commet_num = #{commetNum,jdbcType=INTEGER},
      describle = #{describle,jdbcType=LONGVARCHAR},
      good_status = #{good_status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 通过goodsid 更新 good的status状态为三 -->
   <update id="updateStatusBygoodsId" parameterType="com.c2c.pojo.Goods" >
   update goods
   
   set good_status = 3
   
   where id = #{id,jdbcType=INTEGER}
   
   </update>
   
   <update id="updateGoodsStatusBygoodsId" parameterType="com.c2c.pojo.Goods" >
   update goods
   set good_status =#{0}
   where id = #{1}
   </update>
   
  <update id="updateByPrimaryKey" parameterType="com.c2c.pojo.Goods" >
    update goods
    set catelog_id = #{catelogId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=REAL},
      real_price = #{realPrice,jdbcType=REAL},
      start_time = #{startTime,jdbcType=VARCHAR},
      end_time = #{endTime,jdbcType=VARCHAR},
      polish_time = #{polishTime,jdbcType=VARCHAR},
      commet_num = #{commetNum,jdbcType=INTEGER},
      describle = #{describle,jdbcType=LONGVARCHAR},
      good_status = #{good_status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>